/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package display;

import static bussiness.ApiGen.genApiDelete;
import static bussiness.ApiGen.genApiGet;
import static bussiness.ApiGen.genApiInsert;
import static bussiness.ApiGen.genApiUpdate;
import static bussiness.ApiGen.genMain;
import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.MongoClient;
import com.squareup.javapoet.ClassName;
import com.squareup.javapoet.JavaFile;
import com.squareup.javapoet.TypeSpec;
import java.awt.Dimension;
import java.io.IOException;
import java.net.UnknownHostException;
import java.nio.file.Paths;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.lang.model.element.Modifier;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import org.json.simple.parser.ParseException;
import utils.DataAccess;
import static utils.MongoUtils.getMongoClient;

/**
 *
 * @author
 */
public class ApiGenFrame extends javax.swing.JFrame {

    /**
     * Creates new form ApiGenFrame
     */
    public ApiGenFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        objectName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        sampleJSON = new javax.swing.JTextArea();
        genAPIButton = new javax.swing.JButton();
        deployAPIButton = new javax.swing.JButton();
        instructionButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setText("AUTO GEN API ");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Object name:");

        objectName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                objectNameActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Sample JSON:");

        sampleJSON.setColumns(20);
        sampleJSON.setRows(5);
        jScrollPane1.setViewportView(sampleJSON);

        genAPIButton.setText("GEN API");
        genAPIButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genAPIButtonActionPerformed(evt);
            }
        });

        deployAPIButton.setText("DEPLOY API");
        deployAPIButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deployAPIButtonActionPerformed(evt);
            }
        });

        instructionButton.setText("INSTRUCTION");
        instructionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                instructionButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(228, 228, 228)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(20, 20, 20)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(instructionButton, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                .addGap(32, 32, 32)
                                .addComponent(genAPIButton, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(deployAPIButton, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(objectName)
                            .addComponent(jScrollPane1))))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(objectName, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deployAPIButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(genAPIButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(instructionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String objName = "";

    private void objectNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_objectNameActionPerformed
    }//GEN-LAST:event_objectNameActionPerformed

    private void genAPIButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genAPIButtonActionPerformed
        objName = objectName.getText();
        if (objName.equals("")) {
            JOptionPane.showMessageDialog(null, "Name of object empty!");
            return;
        }
        MongoClient mongoClient = null;
        try {
            mongoClient = getMongoClient();
        } catch (UnknownHostException ex) {
            Logger.getLogger(ApiGenFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        DB db = mongoClient.getDB("api_test");

        try {
            DBCollection collection = db.createCollection(objName, new BasicDBObject());
        } catch (Exception e) {
            System.out.println("database is created");
        } finally {
            TypeSpec genApiCrud = TypeSpec.classBuilder("GenApiFinal")
                    .addModifiers(Modifier.PUBLIC)
                    .addMethod(genApiGet(objName))
                    .addMethod(genApiInsert(objName))
                    .addMethod(genApiUpdate(objName))
                    .addMethod(genApiDelete(objName))
                    .addMethod(genMain(objName))
                    .build();

            ClassName MongoUtils = ClassName.get("utils", "MongoUtils");

            JavaFile javaFile1 = JavaFile.builder("storeApi", genApiCrud)
                    .addStaticImport(MongoUtils, "getMongoClient")
                    .addStaticImport(ClassName.get("spark", "Spark"), "*")
                    .addStaticImport(ClassName.get("utils", "JsonUtil"), "*")
                    .build();
            JOptionPane.showMessageDialog(null, "GEN API SUCCESS!");

            try {
                if (sampleJSON.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Sample JSON empty!");
                    return;
                }
                DataAccess.initInfo(sampleJSON.getText(), objName);
            } catch (ParseException ex) {
                Logger.getLogger(ApiGenFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnknownHostException ex) {
                Logger.getLogger(ApiGenFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {
                javaFile1.writeTo(System.out);
                javaFile1.writeTo(Paths.get("./src/main/java"));
            } catch (IOException ex) {
                Logger.getLogger(ApiGenFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_genAPIButtonActionPerformed

    private void deployAPIButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deployAPIButtonActionPerformed
        try {
            Runtime.getRuntime().exec("cmd /c start cmd.exe /K \"set path=%path%;C:\\apache-maven-3.6.2\\bin && mvn compile && mvn install && mvn exec:java -Dexec.mainClass=storeApi.GenApiFinal\"");
        } catch (IOException ex) {
            Logger.getLogger(ApiGenFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deployAPIButtonActionPerformed

    private void instructionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_instructionButtonActionPerformed
        JFrame p = new JFrame();
        objName = objectName.getText();
        System.out.println(objName);
        JTextArea textGet = new JTextArea();
        String text = String.format("---------------------------------------------------------\n"
                + "API GET DATA: http://localhost:4567/getInfo%s\n"
                + "VD params:\n"
                + "{\n"
                + "	\"color\": \"red\",\n"
                + "	\"name\": \"Toyota\"\n"
                + "}"
                + "\n---------------------------------------------------------\n"
                + "API INSERT DATA: http://localhost:4567/insertInfo%s\n"
                + "{\n"
                + "	\"name\":\"Audi\",\n"
                + "	\"color\":\"white\",\n"
                + "	\"price\":\"1000$\"\n"
                + "}"
                + "\n---------------------------------------------------------\n"
                + "API UPDATE DATA: http://localhost:4567/updateInfo%s\n"
                + "{\n"
                + "	\"query\":{\n"
                + "		\"name\": \"BMW\"\n"
                + "	},\n"
                + "	\"values\":{\n"
                + "		\"color\": \"Blue\"\n"
                + "	}\n"
                + "}"
                + "\n---------------------------------------------------------\n"
                + "API DELETE DATA: http://localhost:4567/deleteInfo%s\n"
                + "{\n"
                + "	\"query\":{\n"
                + "		\"name\": \"BMW\"\n"
                + "	}\n"
                + "}",
                objName,
                objName,
                objName,
                objName
        );
        textGet.setText(text);

        p.add(textGet);

        p.setSize(new Dimension(400, 600));
        p.setVisible(true);
    }//GEN-LAST:event_instructionButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ApiGenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ApiGenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ApiGenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ApiGenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ApiGenFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deployAPIButton;
    private javax.swing.JButton genAPIButton;
    private javax.swing.JButton instructionButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField objectName;
    private javax.swing.JTextArea sampleJSON;
    // End of variables declaration//GEN-END:variables
}
